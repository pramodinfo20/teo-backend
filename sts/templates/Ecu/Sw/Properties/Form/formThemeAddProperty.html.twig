{% trans_default_domain 'messages' %}

{% block EcuSwPropertiesModelType_label %} {% endblock %}

{% block EcuSwPropertiesCollectionType_widget %}
    {# form_row would write extra markup, so we directly write the collection #}
    {{ form_widget(form.properties) }}
{% endblock %}

{# By default, collection uses the form_widget block to create its markup, but we want a table #}
{% block collection_widget %}
    {% spaceless %}
        {#
         # This is almost a copy/paste of jquery.collection.html.twig, we can't use it as it also
         # use form_widget. Note that we also use form_widget(prototype) instead of form_row(prototype)
         # to avoid generating extra markup.
         #}
        {% if prototype is defined %}
            {% set attr = attr|merge({'data-prototype': form_widget(prototype)}) %}
            {% set attr = attr|merge({'data-prototype-name': prototype.vars.name}) %}
        {% endif %}
        {% set attr = attr|merge({'data-allow-add': 1}) %}
        {% set attr = attr|merge({'data-allow-remove': 0 }) %}
        {% set attr = attr|merge({'data-allow-up': 0 }) %}
        {% set attr = attr|merge({'data-allow-down': 0 }) %}
        {% set attr = attr|merge({'data-name-prefix': full_name}) %}

        <table {{ block('widget_attributes') }}>
            <thead>
            <tr>
                <th>{{ 'properties.Form.formThemeAddProperty.name' | trans }}</th>
                <th>{{ 'properties.Form.formThemeAddProperty.value' | trans }}</th>
            </tr>
            </thead>
            <tbody>
            {#
             # we can't form_widget(form) as it would render parent markup for a collection, so
             # we iterate manually on children
             #}
            {% for item in form %}
                {{ form_widget(item) }}
            {% endfor %}
            </tbody>
        </table>

    {% endspaceless %}
{% endblock %}

{% block EcuSwPropertiesModelType_widget %}
    <tr class="properties" {{ block('widget_attributes') }}>
        {{ form_widget(form.id, { 'attr': { 'class': 'hidden-row' }}) }}
        <td>
            {{ form_widget(form.name, { 'attr': {'readonly': 'true' }}) }}
        </td>
        <td>
            {{ form_widget(form.value, { 'attr': {'readonly': 'true' }}) }}
        </td>
    </tr>
{% endblock %}
