{% trans_default_domain 'messages' %}

{% block CocParametersCollectionType_widget %}
    {# form_row would write extra markup, so we directly write the collection #}
    {{ form_widget(form.parameters) }}
{% endblock %}

{# By default, collection uses the form_widget block to create its markup, but we want a table #}
{% block collection_widget %}
    {% spaceless %}
        {#
         # This is almost a copy/paste of jquery.collection.html.twig, we can't use it as it also
         # use form_widget. Note that we also use form_widget(prototype) instead of form_row(prototype)
         # to avoid generating extra markup.
         #}
        {% if prototype is defined %}
            {% set attr = attr|merge({'data-prototype': form_widget(prototype)}) %}
            {% set attr = attr|merge({'data-prototype-name': prototype.vars.name}) %}
        {% endif %}
        {% set attr = attr|merge({'data-allow-add': allow_add ? 1 : 0}) %}
        {% set attr = attr|merge({'data-allow-remove': allow_delete ? 1 : 0 }) %}
        {% set attr = attr|merge({'data-name-prefix': full_name}) %}

        {# Don't forget to add the collection attributes in your markup #}
        <table {{ block('widget_attributes') }}>
            <thead>
                <th>
                    {{ 'parameters.values.form.twig.editValue.row' | trans }}
                </th>
                <th>
                    {{ 'parameters.values.form.twig.editValue.id' | trans }}
                </th>
                <th>
                    {{ 'parameters.values.form.twig.editValue.name' | trans }}
                </th>
                <th>
                    {{ 'parameters.values.form.twig.editValue.field' | trans }}
                </th>
                <th>
                    {{ 'parameters.values.form.twig.editValue.value' | trans }}
                </th>
                <th>
                    {{ 'parameters.values.form.twig.editValue.unit' | trans }}
                </th>
                <th>
                    {{ 'parameters.values.form.twig.editValue.description' | trans }}
                </th>
                <th>
                    {{ 'parameters.values.form.twig.editValue.responsibleU' | trans }}
                </th>
                <th>
                    {{ 'parameters.values.form.twig.editValue.variableT' | trans }}
                </th>
            </thead>
            <tbody>
            {#
             # we can't form_widget(form) as it would render parent markup for a collection, so
             # we iterate manually on children
             #}
            {% for item in form %}
                {{ form_widget(item) }}
            {% endfor %}
            </tbody>
        </table>
    {% endspaceless %}
{% endblock %}

{% block CocParametersValuesType_widget %}
    {# widget_attributes will generate class="item" from the DiscountCollectionType.entry_options configuration #}
    <tr class="parameter" {{ block('widget_attributes') }}>
        {{ form_widget(form.variableTypeId) }}
        {{ form_widget(form.cocParameterValueSetId) }}
        {{ form_widget(form.cocParameterId) }}
        <td>{{ form.counter.vars.value }}</td>
        <td>{{ form.cocParameterId.vars.value }}</td>
        <td>{{ form.cocParameterName.vars.value }}</td>
        <td>{{ form.field.vars.value }}</td>
        <td>
            {% if form.valueString is defined %}
                {{ form_widget(form.valueString) }}
            {% elseif form.valueDate is defined %}
                {{ form_widget(form.valueDate) }}
            {% elseif form.valueBool is defined %}
                {{ form_widget(form.valueBool) }}
            {% elseif form.valueDouble is defined %}
                {{ form_widget(form.valueDouble) }}
            {% elseif form.valueInteger is defined %}
                {{ form_widget(form.valueInteger) }}
            {% elseif form.valueBigInteger is defined %}
                {{ form_widget(form.valueBigInteger) }}
            {% endif %}
        </td>
        <td>{{ form.unitName.vars.value }}</td>
        <td>{{ form.description.vars.value }}</td>
        <td>{{ form.responsibleUser.vars.value }}</td>
        <td>{{ form.variableTypeName.vars.value }}</td>
    </tr>
{% endblock %}

{% block CocParametersValuesType_label %}{% endblock %}
